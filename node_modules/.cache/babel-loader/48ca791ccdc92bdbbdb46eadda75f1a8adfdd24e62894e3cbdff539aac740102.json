{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andri\\\\posts-react\\\\src\\\\components\\\\AppRouter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport { privateRoutes, publicRoutes } from \"../router\";\nimport { AuthContext } from \"../context\";\nimport Loader from \"./UI/loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppRouter = () => {\n  _s();\n  const {\n    isAuth,\n    isLoading\n  } = useContext(AuthContext);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n  return isAuth ? /*#__PURE__*/_jsxDEV(Routes, {\n    children: [privateRoutes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n      element: /*#__PURE__*/_jsxDEV(route.element, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 34\n      }, this),\n      path: route.path\n    }, route.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/*\",\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        replace: true,\n        to: \"/posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Routes, {\n    children: [publicRoutes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n      element: /*#__PURE__*/_jsxDEV(route.element, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 34\n      }, this),\n      path: route.path\n    }, route.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/*\",\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        replace: true,\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }, this);\n};\n_s(AppRouter, \"p11QuzApV7ohcvywyZxmt3feicw=\");\n_c = AppRouter;\nexport default AppRouter;\nvar _c;\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["React","useContext","Navigate","Route","Routes","privateRoutes","publicRoutes","AuthContext","Loader","AppRouter","isAuth","isLoading","map","route","path"],"sources":["C:/Users/andri/posts-react/src/components/AppRouter.jsx"],"sourcesContent":["import React, {useContext} from 'react';\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport {privateRoutes, publicRoutes} from \"../router\";\r\nimport {AuthContext} from \"../context\";\r\nimport Loader from \"./UI/loader/Loader\";\r\n\r\nconst AppRouter = () => {\r\n    const {isAuth, isLoading} = useContext(AuthContext)\r\n\r\n    if(isLoading) {\r\n        return <Loader />\r\n    }\r\n    return (\r\n        isAuth\r\n            ?\r\n            <Routes>\r\n                {privateRoutes.map(route =>\r\n                    <Route\r\n                        element={<route.element />}\r\n                        path={route.path}\r\n                        key={route.path}\r\n                    />\r\n                )}\r\n                <Route path=\"/*\" element={<Navigate replace to=\"/posts\" />}></Route>\r\n            </Routes>\r\n            :\r\n            <Routes>\r\n                {publicRoutes.map(route =>\r\n                    <Route\r\n                        element={<route.element />}\r\n                        path={route.path}\r\n                        key={route.path}\r\n                    />\r\n                )}\r\n                <Route path=\"/*\" element={<Navigate replace to=\"/login\" />}></Route>\r\n            </Routes>\r\n    );\r\n};\r\n\r\nexport default AppRouter;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,QAAO,OAAO;AACvC,SAAQC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,QAAO,kBAAkB;AACxD,SAAQC,aAAa,EAAEC,YAAY,QAAO,WAAW;AACrD,SAAQC,WAAW,QAAO,YAAY;AACtC,OAAOC,MAAM,MAAM,oBAAoB;AAAC;AAExC,MAAMC,SAAS,GAAG,MAAM;EAAA;EACpB,MAAM;IAACC,MAAM;IAAEC;EAAS,CAAC,GAAGV,UAAU,CAACM,WAAW,CAAC;EAEnD,IAAGI,SAAS,EAAE;IACV,oBAAO,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EACrB;EACA,OACID,MAAM,gBAEF,QAAC,MAAM;IAAA,WACFL,aAAa,CAACO,GAAG,CAACC,KAAK,iBACpB,QAAC,KAAK;MACF,OAAO,eAAE,QAAC,KAAK,CAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAI;MAC3B,IAAI,EAAEA,KAAK,CAACC;IAAK,GACZD,KAAK,CAACC,IAAI;MAAA;MAAA;MAAA;IAAA,QACjB,CACL,eACD,QAAC,KAAK;MAAC,IAAI,EAAC,IAAI;MAAC,OAAO,eAAE,QAAC,QAAQ;QAAC,OAAO;QAAC,EAAE,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/D,gBAET,QAAC,MAAM;IAAA,WACFR,YAAY,CAACM,GAAG,CAACC,KAAK,iBACnB,QAAC,KAAK;MACF,OAAO,eAAE,QAAC,KAAK,CAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAI;MAC3B,IAAI,EAAEA,KAAK,CAACC;IAAK,GACZD,KAAK,CAACC,IAAI;MAAA;MAAA;MAAA;IAAA,QACjB,CACL,eACD,QAAC,KAAK;MAAC,IAAI,EAAC,IAAI;MAAC,OAAO,eAAE,QAAC,QAAQ;QAAC,OAAO;QAAC,EAAE,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/D;AAErB,CAAC;AAAC,GA/BIL,SAAS;AAAA,KAATA,SAAS;AAiCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}