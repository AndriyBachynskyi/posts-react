{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andri\\\\posts-react\\\\src\\\\pages\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport PostService from \"../API/PostService\";\nimport { getPageCount } from \"../utils/pages\";\nimport MyButton from \"../components/UI/button/MyButton\";\nimport MyModal from \"../components/UI/MyModal/MyModal\";\nimport PostForm from \"../components/PostForm\";\nimport PostFilter from \"../components/PostFilter\";\nimport PostList from \"../components/PostList\";\nimport Pagination from \"../components/UI/pagination/Pagination\";\nimport { usePosts } from \"../hooks/usePosts\";\nimport Loader from \"../components/UI/loader/Loader\";\nimport { useObserver } from \"../hooks/useObserver\";\nimport MySelect from \"../components/UI/select/MySelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n  const lastElement = useRef();\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async (limit, page) => {\n    const response = await PostService.getAll(limit, page);\n    setPosts([...posts, ...response.data]);\n    const totalCount = response.headers['x-total-count'];\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n  useObserver(lastElement, page < totalPages, isPostsLoading, () => {\n    setPage(page + 1);\n  });\n  useEffect(() => {\n    fetchPosts(limit, page);\n  }, [page, limit]);\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n  const changePage = page => {\n    setPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyButton, {\n      style: {\n        marginTop: '30px'\n      },\n      onClick: () => setModal(true),\n      children: \"\\u0421\\u0442\\u0432\\u043E\\u0440\\u0438\\u0442\\u0438 \\u043F\\u043E\\u0441\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '15px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n      value: limit,\n      onChange: value => setLimit(value),\n      defaultValue: \"\\u041A\\u0456\\u043B-\\u0441\\u0442\\u044C \\u0435\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u0456\\u0432 \\u043D\\u0430 \\u0441\\u0442\\u043E\\u0440\\u0456\\u043D\\u0446\\u0456\",\n      options: [{\n        value: 5,\n        name: '5'\n      }, {\n        value: 10,\n        name: '10'\n      }, {\n        value: 15,\n        name: '15'\n      }, {\n        value: -1,\n        name: 'Показати усі пости'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), postError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0412\\u0438\\u043D\\u0438\\u043A\\u043B\\u0430 \\u043F\\u043E\\u043C\\u0438\\u043B\\u043A\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      posts: sortedAndSearchedPosts,\n      title: 'Список постів',\n      remove: removePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: lastElement,\n      style: {\n        height: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), isPostsLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '50px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 93\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      page: page,\n      changePage: changePage,\n      totalPages: totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(Posts, \"bOsitAwfHi8o4LkiftU9elk67HE=\", false, function () {\n  return [usePosts, useFetching, useObserver];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useFetching","PostService","getPageCount","MyButton","MyModal","PostForm","PostFilter","PostList","Pagination","usePosts","Loader","useObserver","MySelect","Posts","posts","setPosts","filter","setFilter","sort","query","modal","setModal","totalPages","setTotalPages","limit","setLimit","page","setPage","sortedAndSearchedPosts","lastElement","fetchPosts","isPostsLoading","postError","response","getAll","data","totalCount","headers","createPost","newPost","removePost","post","p","id","changePage","marginTop","margin","value","name","height","display","justifyContent"],"sources":["C:/Users/andri/posts-react/src/pages/Posts.jsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\nimport {useFetching} from \"../hooks/useFetching\";\r\nimport PostService from \"../API/PostService\";\r\nimport {getPageCount} from \"../utils/pages\";\r\nimport MyButton from \"../components/UI/button/MyButton\";\r\nimport MyModal from \"../components/UI/MyModal/MyModal\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostFilter from \"../components/PostFilter\";\r\nimport PostList from \"../components/PostList\";\r\nimport Pagination from \"../components/UI/pagination/Pagination\";\r\nimport {usePosts} from \"../hooks/usePosts\";\r\nimport Loader from \"../components/UI/loader/Loader\";\r\nimport {useObserver} from \"../hooks/useObserver\";\r\nimport MySelect from \"../components/UI/select/MySelect\";\r\n\r\nfunction Posts() {\r\n    const [posts, setPosts] = useState([])\r\n    const [filter, setFilter] = useState({sort: '', query: ''})\r\n    const [modal, setModal] = useState(false)\r\n    const [totalPages, setTotalPages] = useState(0)\r\n    const [limit, setLimit] = useState(10)\r\n    const [page, setPage] = useState(1)\r\n    const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query)\r\n    const lastElement = useRef()\r\n\r\n    const [fetchPosts, isPostsLoading, postError] = useFetching(async (limit, page) => {\r\n        const response = await PostService.getAll(limit, page)\r\n        setPosts([...posts, ...response.data])\r\n        const totalCount = response.headers['x-total-count']\r\n        setTotalPages(getPageCount(totalCount, limit))\r\n    })\r\n\r\n    useObserver(lastElement, page < totalPages, isPostsLoading, () => {\r\n        setPage(page + 1)\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetchPosts(limit, page)\r\n    }, [page, limit])\r\n\r\n    const createPost = (newPost) => {\r\n        setPosts([...posts, newPost])\r\n        setModal(false)\r\n    }\r\n    const removePost = (post) => {\r\n        setPosts(posts.filter(p => p.id !== post.id))\r\n    }\r\n    const changePage = (page) => {\r\n        setPage(page)\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <MyButton style={{marginTop: '30px'}} onClick={() => setModal(true)}>Створити пост</MyButton>\r\n            <MyModal visible={modal} setVisible={setModal}>\r\n                <PostForm create={createPost} />\r\n            </MyModal>\r\n            <hr style={{margin: '15px 0'}}/>\r\n            <PostFilter filter={filter} setFilter={setFilter} />\r\n            <MySelect\r\n                value={limit}\r\n                onChange={value => setLimit(value)}\r\n                defaultValue='Кіл-сть елементів на сторінці'\r\n                options={[\r\n                    {value: 5, name: '5'},\r\n                    {value: 10, name: '10'},\r\n                    {value: 15, name: '15'},\r\n                    {value: -1, name: 'Показати усі пости'}\r\n                ]}\r\n            />\r\n            {postError && <h1>Виникла помилка</h1>}\r\n            <PostList posts={sortedAndSearchedPosts} title={'Список постів'} remove={removePost} />\r\n            <div ref={lastElement} style={{height: '20px'}}></div>\r\n            {isPostsLoading &&\r\n                <div style={{display: 'flex', justifyContent: 'center', marginTop: '50px'}}><Loader/></div>\r\n            }\r\n            <Pagination page={page} changePage={changePage} totalPages={totalPages} />\r\n        </div>\r\n    );\r\n}\r\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}