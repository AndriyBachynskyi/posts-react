{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useRef } from \"react\";\nexport const useObserver = (ref, canLoad, isLoading, callback) => {\n  _s();\n  const observer = useRef();\n  useEffect(() => {\n    if (isLoading) return;\n    if (observer.current) observer.current.disconnect();\n    let cb = function (entries, observer) {\n      if (entries[0].isIntersecting && canLoad) {\n        callback();\n      }\n    };\n    observer.current = new IntersectionObserver(cb);\n    observer.current.observe(ref.current);\n  }, [isLoading]);\n};\n_s(useObserver, \"mvUvGhiqkPzCYiMPAW/Py9ym/ZY=\");","map":{"version":3,"names":["useEffect","useRef","useObserver","ref","canLoad","isLoading","callback","observer","current","disconnect","cb","entries","isIntersecting","IntersectionObserver","observe"],"sources":["C:/Users/andri/posts-react/src/hooks/useObserver.js"],"sourcesContent":["import {useEffect} from \"react\";\r\nimport {useRef} from \"react\";\r\n\r\nexport const useObserver = (ref, canLoad, isLoading, callback) => {\r\n    const observer = useRef()\r\n    useEffect(() => {\r\n        if(isLoading) return\r\n        if(observer.current) observer.current.disconnect()\r\n        let cb = function (entries, observer) {\r\n            if(entries[0].isIntersecting && canLoad) {\r\n                callback()\r\n            }\r\n        }\r\n        observer.current = new IntersectionObserver(cb)\r\n        observer.current.observe(ref.current)\r\n    }, [isLoading])\r\n}"],"mappings":";AAAA,SAAQA,SAAS,QAAO,OAAO;AAC/B,SAAQC,MAAM,QAAO,OAAO;AAE5B,OAAO,MAAMC,WAAW,GAAG,CAACC,GAAG,EAAEC,OAAO,EAAEC,SAAS,EAAEC,QAAQ,KAAK;EAAA;EAC9D,MAAMC,QAAQ,GAAGN,MAAM,EAAE;EACzBD,SAAS,CAAC,MAAM;IACZ,IAAGK,SAAS,EAAE;IACd,IAAGE,QAAQ,CAACC,OAAO,EAAED,QAAQ,CAACC,OAAO,CAACC,UAAU,EAAE;IAClD,IAAIC,EAAE,GAAG,UAAUC,OAAO,EAAEJ,QAAQ,EAAE;MAClC,IAAGI,OAAO,CAAC,CAAC,CAAC,CAACC,cAAc,IAAIR,OAAO,EAAE;QACrCE,QAAQ,EAAE;MACd;IACJ,CAAC;IACDC,QAAQ,CAACC,OAAO,GAAG,IAAIK,oBAAoB,CAACH,EAAE,CAAC;IAC/CH,QAAQ,CAACC,OAAO,CAACM,OAAO,CAACX,GAAG,CAACK,OAAO,CAAC;EACzC,CAAC,EAAE,CAACH,SAAS,CAAC,CAAC;AACnB,CAAC;AAAA,GAbYH,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}